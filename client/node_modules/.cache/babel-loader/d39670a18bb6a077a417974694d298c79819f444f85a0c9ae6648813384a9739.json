{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HEMANG\\\\Desktop\\\\GitProject\\\\place-to-stay\\\\client\\\\src\\\\components\\\\map\\\\ClusterMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useValue } from '../../context/ContextProvider';\nimport { getRooms } from '../../actions/room';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport Supercluster from 'supercluster';\nimport './cluster.css';\nimport { Avatar, Paper, Tooltip } from '@mui/material';\nimport GeocoderInput from '../sidebar/GeocoderInput';\nimport PopupRoom from './PopupRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supercluster = new Supercluster({\n  radius: 75,\n  maxZoom: 20\n});\nconst ClusterMap = () => {\n  _s();\n  const {\n    state: {\n      filteredRooms\n    },\n    dispatch,\n    mapRef\n  } = useValue();\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [bounds, setBounds] = useState([-180, -85, 180, 85]);\n  const [zoom, setZoom] = useState(0);\n  const [popupInfo, setPopupInfo] = useState(null);\n  useEffect(() => {\n    getRooms(dispatch);\n  }, []);\n  useEffect(() => {\n    const points = filteredRooms.map(room => ({\n      type: 'Feature',\n      properties: {\n        cluster: false,\n        roomId: room._id,\n        price: room.price,\n        title: room.title,\n        description: room.description,\n        lng: room.lng,\n        lat: room.lat,\n        images: room.images,\n        uPhoto: room.uPhoto,\n        uName: room.uName\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [parseFloat(room.lng), parseFloat(room.lat)]\n      }\n    }));\n    setPoints(points);\n  }, [filteredRooms]);\n  useEffect(() => {\n    supercluster.load(points);\n    setClusters(supercluster.getClusters(bounds, zoom));\n  }, [points, zoom, bounds]);\n  useEffect(() => {\n    if (mapRef.current) {\n      setBounds(mapRef.current.getMap().getBounds().toArray().flat());\n    }\n  }, [mapRef === null || mapRef === void 0 ? void 0 : mapRef.current]);\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, {\n    initialViewState: {\n      latitude: 51.5072,\n      longitude: 0.1276\n    },\n    mapboxAccessToken: process.env.REACT_APP_MAP_TOKEN,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    ref: mapRef,\n    onZoomEnd: e => setZoom(Math.round(e.viewState.zoom)),\n    children: [clusters.map(cluster => {\n      const {\n        cluster: isCluster,\n        point_count\n      } = cluster.properties;\n      const [longitude, latitude] = cluster.geometry.coordinates;\n      if (isCluster) {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          longitude: longitude,\n          latitude: latitude,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cluster-marker\",\n            style: {\n              width: `${10 + point_count / points.length * 20}px`,\n              height: `${10 + point_count / points.length * 20}px`\n            },\n            onClick: () => {\n              const zoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\n              mapRef.current.flyTo({\n                center: [longitude, latitude],\n                zoom,\n                speed: 1\n              });\n            },\n            children: point_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, `cluster-${cluster.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        longitude: longitude,\n        latitude: latitude,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: cluster.properties.uName,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: cluster.properties.uPhoto,\n            component: Paper,\n            elevation: 2,\n            onClick: () => setPopupInfo(cluster.properties)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, `room-${cluster.properties.roomId}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(GeocoderInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), popupInfo && /*#__PURE__*/_jsxDEV(Popup, {\n      longitude: popupInfo.lng,\n      latitude: popupInfo.lat,\n      maxWidth: \"auto\",\n      closeOnClick: false,\n      focusAfterOpen: false,\n      onClose: () => setPopupInfo(null),\n      children: /*#__PURE__*/_jsxDEV(PopupRoom, {\n        popupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ClusterMap, \"dcg2qDg9vOi7TGqJt18pWc1BrMc=\", false, function () {\n  return [useValue];\n});\n_c = ClusterMap;\nexport default ClusterMap;\nvar _c;\n$RefreshReg$(_c, \"ClusterMap\");","map":{"version":3,"names":["React","useEffect","useState","useValue","getRooms","ReactMapGL","Marker","Popup","Supercluster","Avatar","Paper","Tooltip","GeocoderInput","PopupRoom","jsxDEV","_jsxDEV","supercluster","radius","maxZoom","ClusterMap","_s","state","filteredRooms","dispatch","mapRef","points","setPoints","clusters","setClusters","bounds","setBounds","zoom","setZoom","popupInfo","setPopupInfo","map","room","type","properties","cluster","roomId","_id","price","title","description","lng","lat","images","uPhoto","uName","geometry","coordinates","parseFloat","load","getClusters","current","getMap","getBounds","toArray","flat","initialViewState","latitude","longitude","mapboxAccessToken","process","env","REACT_APP_MAP_TOKEN","mapStyle","ref","onZoomEnd","e","Math","round","viewState","children","isCluster","point_count","className","style","width","length","height","onClick","min","getClusterExpansionZoom","id","flyTo","center","speed","fileName","_jsxFileName","lineNumber","columnNumber","src","component","elevation","maxWidth","closeOnClick","focusAfterOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/HEMANG/Desktop/GitProject/place-to-stay/client/src/components/map/ClusterMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useValue } from '../../context/ContextProvider';\r\nimport { getRooms } from '../../actions/room';\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\r\nimport Supercluster from 'supercluster';\r\nimport './cluster.css';\r\nimport { Avatar, Paper, Tooltip } from '@mui/material';\r\nimport GeocoderInput from '../sidebar/GeocoderInput';\r\nimport PopupRoom from './PopupRoom';\r\n\r\nconst supercluster = new Supercluster({\r\n  radius: 75,\r\n  maxZoom: 20,\r\n});\r\n\r\nconst ClusterMap = () => {\r\n  const {\r\n    state: { filteredRooms },\r\n    dispatch,\r\n    mapRef,\r\n  } = useValue();\r\n  const [points, setPoints] = useState([]);\r\n  const [clusters, setClusters] = useState([]);\r\n  const [bounds, setBounds] = useState([-180, -85, 180, 85]);\r\n  const [zoom, setZoom] = useState(0);\r\n  const [popupInfo, setPopupInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getRooms(dispatch);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const points = filteredRooms.map((room) => ({\r\n      type: 'Feature',\r\n      properties: {\r\n        cluster: false,\r\n        roomId: room._id,\r\n        price: room.price,\r\n        title: room.title,\r\n        description: room.description,\r\n        lng: room.lng,\r\n        lat: room.lat,\r\n        images: room.images,\r\n        uPhoto: room.uPhoto,\r\n        uName: room.uName,\r\n      },\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [parseFloat(room.lng), parseFloat(room.lat)],\r\n      },\r\n    }));\r\n    setPoints(points);\r\n  }, [filteredRooms]);\r\n\r\n  useEffect(() => {\r\n    supercluster.load(points);\r\n    setClusters(supercluster.getClusters(bounds, zoom));\r\n  }, [points, zoom, bounds]);\r\n\r\n  useEffect(() => {\r\n    if (mapRef.current) {\r\n      setBounds(mapRef.current.getMap().getBounds().toArray().flat());\r\n    }\r\n  }, [mapRef?.current]);\r\n  return (\r\n    <ReactMapGL\r\n      initialViewState={{ latitude: 51.5072, longitude: 0.1276 }}\r\n      mapboxAccessToken={process.env.REACT_APP_MAP_TOKEN}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      ref={mapRef}\r\n      onZoomEnd={(e) => setZoom(Math.round(e.viewState.zoom))}\r\n    >\r\n      {clusters.map((cluster) => {\r\n        const { cluster: isCluster, point_count } = cluster.properties;\r\n        const [longitude, latitude] = cluster.geometry.coordinates;\r\n        if (isCluster) {\r\n          return (\r\n            <Marker\r\n              key={`cluster-${cluster.id}`}\r\n              longitude={longitude}\r\n              latitude={latitude}\r\n            >\r\n              <div\r\n                className=\"cluster-marker\"\r\n                style={{\r\n                  width: `${10 + (point_count / points.length) * 20}px`,\r\n                  height: `${10 + (point_count / points.length) * 20}px`,\r\n                }}\r\n                onClick={() => {\r\n                  const zoom = Math.min(\r\n                    supercluster.getClusterExpansionZoom(cluster.id),\r\n                    20\r\n                  );\r\n                  mapRef.current.flyTo({\r\n                    center: [longitude, latitude],\r\n                    zoom,\r\n                    speed: 1,\r\n                  });\r\n                }}\r\n              >\r\n                {point_count}\r\n              </div>\r\n            </Marker>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <Marker\r\n            key={`room-${cluster.properties.roomId}`}\r\n            longitude={longitude}\r\n            latitude={latitude}\r\n          >\r\n            <Tooltip title={cluster.properties.uName}>\r\n              <Avatar\r\n                src={cluster.properties.uPhoto}\r\n                component={Paper}\r\n                elevation={2}\r\n                onClick={() => setPopupInfo(cluster.properties)}\r\n              />\r\n            </Tooltip>\r\n          </Marker>\r\n        );\r\n      })}\r\n      <GeocoderInput />\r\n      {popupInfo && (\r\n        <Popup\r\n          longitude={popupInfo.lng}\r\n          latitude={popupInfo.lat}\r\n          maxWidth=\"auto\"\r\n          closeOnClick={false}\r\n          focusAfterOpen={false}\r\n          onClose={() => setPopupInfo(null)}\r\n        >\r\n          <PopupRoom {...{ popupInfo }} />\r\n        </Popup>\r\n      )}\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default ClusterMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}